#!/usr/bin/python3
# -*- coding: utf-8 -*-

"""
Head       :Pixy Application V2020

Description:

Author     : Co Bao Hieu
Id         : M3718007
"""

import sys
import PyQt5
import time
import datetime
import numpy as np
import usb

import config
import config_ui
# import detect
import main_ui
import about_ui

# import PyQt5.Qt as Qt
import PyQt5.QtCore as QtCore
import PyQt5.QtDBus as QtDBus
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
# import PyQt5.QtNetwork as QtNetwork
# import PyQt5.QtXmlPatterns as QtXmlPatterns
# from PyQt5 import *

from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QFileDialog, QInputDialog, QGraphicsRectItem, QGraphicsScene, QMessageBox, QMainWindow, QToolTip, QPushButton, QLineEdit, QDialog
# from QtCore import *
from PyQt5.QtGui import QIcon, QFont

from about_ui import Ui_AboutForm as Form

# class about_window(QWidget):
#     def __init__(self):
#         app = 1
#         app = QtWidgets.QApplication(sys.argv)
#         super().__init__()
#         about_window = QMainWindow()
#         self.ui = about_ui.Ui_AboutForm()
#         self.setupUi(about_window)

class main(QWidget):
    def __init__(self):
        app = 0
        app = QtWidgets.QApplication(sys.argv)
        super().__init__()
        main = QtWidgets.QMainWindow()
        self.ui = main_ui.Ui_mainWindow()
        self.ui.setupUi(main)

        # self.action_connect()
        main.show()
        sys.exit(app.exec_())

    # def action_connect(self):
    #     self.ui.actionAbout.triggered.connect(self.actionAbout_triggered)

        # self.ui.actionExit.triggered.connect(self.exitCall_triggered)

    # def exitCall_triggered(self):
    #     # self.ui.exitAction = QAction('Exit', self) # QIcon('exit.png'), 'Exit', self)
    #     self.actionExit.setShortcut('Ctrl+W')
    #     self.actionExit.setStatusTip('Exit application')
    #     self.actionExit.triggered.connect(self.close)#qApp.quit)

    # def exitCall(self):
    #     QApplication.quit()

    # def actionAbout_triggered(self):
    #     self.about = about_window()
    #     self.about.exec_()
    #     self.about.show()

    # def return_accept(self):
    #     print("Yes")

    # def return_cancel(self):
    #     print("No")

if __name__ == "__main__":
    main()