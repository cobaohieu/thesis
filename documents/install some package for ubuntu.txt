sudo apt install libcanberra-gtk-module libcanberra-gtk3-module -y
sudo apt-get install libavformat-dev libavutil-dev libswscale-dev -y
sudo apt-get install libv4l-dev -y &&
sudo apt-get install libcanberra-gtk* -y &&
sudo apt-get install libcanberra-gtk-module:i386 -y &&
sudo apt install python-pip -y &&
sudo apt install python3-pip -y &&
sudo apt-get install python-usb python3-usb -y &&
pip3 install --upgrade libusb &&
pip3 install -U pyudev &&
pip3 install -U pynetworktables &&
pip3 install -U wiringpi2 &&
pip3 install termcolor &&
pip3 install colour &&
pip3 install libusb1
pip3 install pyusb &&
pip3 install pywinusb &&
pip3 install websocket &&
pip3 install portlaocker &&
pip3 install micropython-fcntl &&
pip3 install PySimpleGUI &&
conda install -c eaton-lab pypng &&
pip3 install PyOpenGL PyOpenGL_accelerate &&
pip3 install PyGame &&
pip3 install PyQt5-sip &&
pip3 install PyQt5 pytorch torchvision &&
sudo apt install python3-venv -y &&
sudo apt install python3-dev -y &&
sudo apt install -y virtualenv &&
mkdir environments &&
cd environments &&
python3 -m venv pytorch-env &&
pip3 install pygame &&
python3 -m pip install --upgrade pip &&
python3 -m pip install pygame &&
pip3 install sdl-config &&
sudo apt-get install python-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsmpeg-dev python-numpy subversion libportmidi-dev ffmpeg libswscale-dev libavformat-dev libavcodec-dev - &&
sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 -y &&
sudo apt-get install python3-pygame &&
pip3 install torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
pip3 install pyzbar
sudo apt-get install zbar-tools
sudo apt-get install libzbar-dev


sudo apt-get install v4l-utils -y &&
sudo v4l2-ctl --list-devices
sudo v4l2-ctl --device=/dev/media0 --all
sudo apt-get install swig libusb-1.0-0-dev g++ git build-essential -y  &&
sudo add-apt-repository ppa:rock-core/qt4 &&
sudo apt update &&
sudo apt-get install qt4-dev-tools qt4-qmake qt4-default -y  &&
sudo apt-get install qt4-dev-tools libqt4-dev libqt4-core libqt4-gui
pip3 install PyGTK
pip3 install -U argparse
pip3 install -U \
    -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-16.04 \
    wxPython

I copied libusb-1.0.dll from C:\Users\username\AppData\Roaming\Python\Python27\site-packages\libusb\_platform\_windows\x64\ to C:\Windows\System32\
--------------------
To build PixyMon for Windows, you need to first install the Qt development environment.  Probably
the easiest way to get there is to install the Qt Open Source distribution with the mingw compiler.
(We use the mingw compiler to create the Windows binaries.)  Go here:
http://qt-project.org/downloads

and download and run the installer, and go with the defaults during the install, unless you know what
you're doing.

Once Qt is installed, run Qt Creator.  Click on File->Open File or Project and browse to
src/host/pixymon/pixymon.pro and then build by clicking on Build->Build Project "pixymon".  Run by
clicking on the run icon or debug icon.  You're done!

https://osdn.net/projects/mingw/releases/p15691
--------------------

https://github.com/Gadgetoid/WiringPi2-Python

sudo apt-get install libyubikey-dev
sudo apt-get install libjson-c-dev

###################################################
conver ui to py
python -m PyQt5.uic.pyuic -x configcolor.ui -o main.py

Update conada
conda update anaconda-navigator
conda update navigator-updater

pip3 install connected-components-3d
pip3 install -U opencv-python
conda install -c https://conda.binstar.org/menpo opencv
sudo apt install python3-opencv


sudo usermod -a -G uucp $USER
sudo usermod -a -G dialout $USER

sudo echo "SUBSYSTEM==\"usb\", ATTR{idVendor}==\"45484\", ATTR{idProduct}==\"61440\", MODE=\"666\"">/etc/udev/rules.d/99-YOURDEVICENAME.rules
export QT_QPA_PLATFORM=wayland
export QT_WAYLAND_SHELL_INTEGRATION=wl-shell
export QT_WAYLAND_SHELL_INTEGRATION=xdg-shell-v5

python3 setup.py build_ext
python3 setup.py build_ext --inplace -D__LINUX__
python3 swig.dat build_ext --inplace -D__LINUX__


swig -python example.i





To automatically upgrade all the outdated packages (that were installed using pip),
just run the script bellow,

pip install $(pip list --outdated | awk '{ print $1 }') --upgrade
Here, pip list --outdated will list all the out dated packages and then we pipe it to awk,
so it will print only the names. Then, the $(...) will make it a variable and then,
everything is done auto matically. Make sure you have the permissions.
(Just put sudo before pip if you're confused) I would write a script named,
pip-upgrade The code is sudo cp pip-upgrade /usr/bin/

sudo pip install $(pip list --outdated | awk '{ print $1 }') --upgrade
Then use the following lines of script to prepare it:

sudo chmod +x pip-upgrade
sudo cp pip-upgrade /usr/bin/
Then, just hit pip-upgrade and voila!